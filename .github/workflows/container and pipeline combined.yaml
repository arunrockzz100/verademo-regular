name: Veracode container scanning

on: 
  push:
  workflow_dispatch:
    

jobs:

  container-scan:
      runs-on: ubuntu-latest
      name: container scan

      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Build Image
          uses: docker/build-push-action@v4
          with:
            push: false
            tags: app:latest
        - name: docker ls
          run: |
            docker images 
        - name: checkout
          uses: actions/checkout@v2

        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it and copies all sources into ZIP file for submitting for analysis. Replace this section with your applications build steps
        - uses: actions/checkout@v3
          with:
            repository: ''

        - name: Build with Maven # Compiling the .war binary from the checked out repo source code to upload to the scanner in the next step
          run: mvn -B package --file app/pom.xml

        - name: Veracode Upload And Scan
          uses: veracode/veracode-uploadandscan-action@0.2.6
          with:
            appname: 'VeraDemo'
            createprofile: false
            filepath: 'app/target/verademo.war'
            vid: '${{ secrets.VID }}'
            vkey: '${{ secrets.VKEY }}'

        - name: Veracode Pipeline-Scan
          uses: veracode/Veracode-pipeline-scan-action@v1.0.10
          with:
            file: 'app/target/verademo.war'
            vid: ${{ secrets.VID }}
            vkey: ${{ secrets.VKEY }}
            command: "scan" 
            type: "directory"
            source: "./"
            format: "json"
            debug: false
            fail_build: false
            pipeline-results-json: results.json

        - name: Verracode Container/IaC/Secrets action step
          uses: veracode/container_iac_secrets_scanning@v1.0.0
          with:
            file: 'app/target/verademo.war'
            vid: ${{ secrets.VID }}
            vkey: ${{ secrets.VKEY }}
            command: "scan" 
            type: "directory"
            source: "./"
            format: "json"
            debug: false
            fail_build: false
#